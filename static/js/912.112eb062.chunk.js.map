{"version":3,"file":"static/js/912.112eb062.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/pages/PhonebookForm/PhonebookForm.styled.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/pages/PhonebookForm/PhonebookForm.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 1px solid #bbb3b3;\n  border-radius: 5px;\n  width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  background-color: #e4eba1;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-flow: column wrap;\n  text-transform: uppercase;\n  font-weight: bold;\n  line-height: 2;\n  font-size: 20px;\n  color: #2a2a2a;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 25px;\n  color: #2a2a2a;\n  background-color: #eaf7c1;\n  border: 1px solid #bbb3b3;\n  border-radius: 3px;\n  margin: auto;\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 130px;\n  height: 40px;\n  text-transform: uppercase;\n  background-color: #4ec6ef;\n  color: #eaf7c1;\n  cursor: pointer;\n  border: 1px solid #4ec6ef;\n  border-radius: 3px;\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n[selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.trim().toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizeFilter)\n    );\n  }\n);","import { useState } from 'react';\nimport { Form, Label, Input, ButtonAdd } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contacts = useSelector(selectContacts);\n  \n    const handleChange = e => {\n      const { name, value } = e.target;\n  \n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n  \n        case 'number':\n          setNumber(value);\n          break;\n  \n        default:\n          throw new Error(\"There is no such option\");\n      }\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const isNameAdded = contacts.some(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        );\n        const isNumberAdded = contacts.some(contact => contact.number === number);\n    \n        if (isNameAdded) {\n          alert(`${name} is alredy in contacts`);\n          return;\n        } else if (isNumberAdded) {\n          alert(`${number} is alredy in contacts`);\n          return;\n        }\n    \n        const newContact = addContact({ name, number });\n    \n        dispatch(newContact);\n    \n        setName('');\n        setNumber('');\n      };\n\n      return (\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChange}\n            />\n          </Label>\n    \n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleChange}\n            />\n          </Label>\n    \n          <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n        </Form>\n      );\n    };\n\n    export default ContactForm;","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-transform: uppercase;\n  font-weight: 700;\n  line-height: 2;\n  font-size: 20px;\n  color: #2a2a2a;\n  margin-bottom: 30px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 350px;\n  height: 25px;\n  color: #2a2a2a;\n  background-color: #eaf7c1;\n  border: 1px solid #bbb3b3;\n  border-radius: 3px;\n  margin: auto;\n`;","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByName } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n  \n    const handleFilterChange = e => {\n       dispatch(filterByName(e.target.value))\n     }\n\n     return (\n        <FilterLabel>\n          Find contacts by name\n          <FilterInput type=\"text\" value={filter} onChange={handleFilterChange} />\n        </FilterLabel>\n      );\n    };\n\nexport default Filter;","import styled from '@emotion/styled';\n\nexport const PhonebookContainer = styled.div`\n  justify-content: center;\n  text-align: center;\n  background-color: rgb(181, 219, 218);\n`;\n\nexport const PhoneBook = styled.h1`\n  color: #2a2a2a;\n  font-size: 50px;\n  margin: 0;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nexport const ContactsTitle = styled.h2`\n  color: #2a2a2a;\n  font-size: 35px;\n  margin: 0;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nexport const EmptyPhonebook = styled.div`\n  color: rgb(94, 84, 57);\n  font-size: 35px;\n  margin: 0;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\nexport const Container = styled.div`\n  margin-top: 30px;\n  padding-bottom: 30px;\n`;","import styled from '@emotion/styled';\n\nexport const ContactContainer = styled.ul`\n  width: 500px;\n  margin: auto auto 20px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  border: 1px solid #bbb3b3;\n  background-color: #e4eba1;\n  justify-content: space-between;\n  padding: 0px 15px;\n`;","import styled from '@emotion/styled';\n\nexport const Contact = styled.p`\n  margin: 0;\n  padding: 15px;\n  font-size: 20px;\n  color: #2a2a2a;\n`;\nexport const ButtonDelete = styled.button`\n  width: 75px;\n  height: 25px;\n  text-align: center;\n  justify-content: center;\n  background-color: #4ec6ef;\n  border: 1px solid #4ec6ef;\n  border-radius: 3px;\n  cursor: pointer;\n  color: #eaf7c1;\n  font-weight: 700;\n`;","import PropTypes from 'prop-types';\nimport {\n    Contact,\n    ButtonDelete\n  } from './ContactItem.styled';\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n    return (\n      <>\n        <Contact>\n          {name}: {number}\n        </Contact>\n        <ButtonDelete onClick={handleDelete}>Delete</ButtonDelete>\n      </>\n    );\n  };\n  export default ContactItem;\n  \n  ContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  };","import {\n    ListItem,\n    ContactContainer,\n  } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nconst ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n  \n    return (\n      <ContactContainer>\n        {visibleContacts.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <ContactItem id={id} name={name} number={number} />\n          </ListItem>\n        ))}\n      </ContactContainer>\n    );\n  };\n  \n  export default ContactList;","import ContactForm from '../../ContactForm';\nimport Filter from '../../Filter';\nimport {\n  PhoneBook,\n  PhonebookContainer,\n  ContactsTitle,\n  EmptyPhonebook,\n  Container,\n} from './PhonebookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/selectors';\nimport ContactList from '../../ContactList';\n\nexport const PhonebookForm = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const contacts = useSelector(selectContacts);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n  \n    return (\n      <PhonebookContainer>\n        <PhoneBook>Phonebook</PhoneBook>\n        <Container>\n          {' '}\n          <ContactForm />\n          <div>\n            {' '}\n            <ContactsTitle>Contacts</ContactsTitle>\n            <Filter />\n            {contacts.length > 0 && <ContactList />}\n            {contacts.length === 0 && !isLoading && !error && (\n              <EmptyPhonebook>\n                Phonebook is empty\n              </EmptyPhonebook>\n            )}\n          </div>\n        </Container>\n      </PhonebookContainer>\n    );\n  };\n  \n  export default PhonebookForm;"],"names":["Form","styled","Label","Input","ButtonAdd","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","normalizeFilter","trim","toLowerCase","contact","includes","useState","setName","number","setNumber","useSelector","handleChange","e","target","dispatch","useDispatch","onSubmit","event","preventDefault","isNameAdded","some","isNumberAdded","alert","newContact","addContact","type","pattern","title","required","onChange","FilterLabel","FilterInput","filterByName","PhonebookContainer","PhoneBook","ContactsTitle","EmptyPhonebook","Container","ContactContainer","ListItem","Contact","ButtonDelete","id","onClick","deleteContact","visibleContacts","PhonebookForm","useEffect","fetchContacts"],"sourceRoot":""}